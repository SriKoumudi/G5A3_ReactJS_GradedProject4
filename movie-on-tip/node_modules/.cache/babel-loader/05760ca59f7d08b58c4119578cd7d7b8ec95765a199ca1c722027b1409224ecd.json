{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sri Koumudi\\\\OneDrive\\\\Desktop\\\\G5B1_ReactJS_GradedProject4-main\\\\movie-on-tip\\\\src\\\\component\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { fetchMoviesList } from \"../service/FetchData\";\nimport MoviesCard from \"./MoviesCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main(_ref) {\n  _s();\n  var _location$state;\n  let {\n    searchValue\n  } = _ref;\n  const [moviesData, setMoviesData] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const location = useLocation();\n  let tabName = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.tab) || \"movies-in-theaters\";\n  const fetchMovies = async () => {\n    try {\n      const movies = await fetchMoviesList(tabName);\n      setMoviesData(movies);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [tabName]);\n  useEffect(() => {\n    const filteredData = searchValue ? moviesData.filter(movie => movie.title.toLowerCase().includes(searchValue)) : moviesData;\n    setFilteredMovies(filteredData);\n  }, [moviesData, searchValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredMovies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(MoviesCard, {\n        movie: movie,\n        tabName: tabName,\n        fetchMovies: fetchMovies\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(Main, \"bPJGfV8K1rMqzHu9Xo7C/g3W+KM=\", false, function () {\n  return [useLocation];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","useLocation","fetchMoviesList","MoviesCard","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_ref","_s","_location$state","searchValue","moviesData","setMoviesData","filteredMovies","setFilteredMovies","location","tabName","state","tab","fetchMovies","movies","error","console","filteredData","filter","movie","title","toLowerCase","includes","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sri Koumudi/OneDrive/Desktop/G5B1_ReactJS_GradedProject4-main/movie-on-tip/src/component/Main.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport IMovieList from \"../model/IMovieList\"\nimport { fetchMoviesList } from \"../service/FetchData\"\nimport MoviesCard from \"./MoviesCard\"\n\ntype Props = {\n    searchValue: string\n}\n\nexport default function Main({ searchValue }: Props) {\n    const [moviesData, setMoviesData] = useState<IMovieList[]>([])\n    const [filteredMovies, setFilteredMovies] = useState<IMovieList[]>([])\n    const location = useLocation()\n\n    let tabName: string | undefined = location.state?.tab || \"movies-in-theaters\"\n\n    const fetchMovies = async () => {\n        try {\n            const movies = await fetchMoviesList(tabName)\n            setMoviesData(movies)\n        } catch (error: any) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        fetchMovies()\n    }, [tabName])\n\n    useEffect(() => {\n        const filteredData = searchValue\n            ? moviesData.filter((movie) =>\n                movie.title.toLowerCase().includes(searchValue)\n            )\n            : moviesData\n        setFilteredMovies(filteredData)\n    }, [moviesData, searchValue])\n\n    return (\n        <>\n            {filteredMovies.map((movie) => {\n                return (\n                    <MoviesCard\n                        key={movie.id}\n                        movie={movie}\n                        tabName={tabName}\n                        fetchMovies={fetchMovies}\n                    />\n                )\n            })}\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,eAAe,QAAQ,sBAAsB;AACtD,OAAOC,UAAU,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMrC,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAAyB;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAAA,IAAxB;IAAEC;EAAmB,CAAC,GAAAH,IAAA;EAC/C,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAe,EAAE,CAAC;EAC9D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAe,EAAE,CAAC;EACtE,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,IAAIiB,OAA2B,GAAG,EAAAP,eAAA,GAAAM,QAAQ,CAACE,KAAK,cAAAR,eAAA,uBAAdA,eAAA,CAAgBS,GAAG,KAAI,oBAAoB;EAE7E,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMpB,eAAe,CAACgB,OAAO,CAAC;MAC7CJ,aAAa,CAACQ,MAAM,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAU,EAAE;MACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZsB,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEbnB,SAAS,CAAC,MAAM;IACZ,MAAM0B,YAAY,GAAGb,WAAW,GAC1BC,UAAU,CAACa,MAAM,CAAEC,KAAK,IACtBA,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClB,WAAW,CAClD,CAAC,GACCC,UAAU;IAChBG,iBAAiB,CAACS,YAAY,CAAC;EACnC,CAAC,EAAE,CAACZ,UAAU,EAAED,WAAW,CAAC,CAAC;EAE7B,oBACIP,OAAA,CAAAE,SAAA;IAAAwB,QAAA,EACKhB,cAAc,CAACiB,GAAG,CAAEL,KAAK,IAAK;MAC3B,oBACItB,OAAA,CAACF,UAAU;QAEPwB,KAAK,EAAEA,KAAM;QACbT,OAAO,EAAEA,OAAQ;QACjBG,WAAW,EAAEA;MAAY,GAHpBM,KAAK,CAACM,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CAAC;IAEV,CAAC;EAAC,gBACJ,CAAC;AAEX;AAAC3B,EAAA,CA3CuBF,IAAI;EAAA,QAGPP,WAAW;AAAA;AAAAqC,EAAA,GAHR9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}