{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sri Koumudi\\\\OneDrive\\\\Desktop\\\\G5A3-REACT-JS-GRADED-ASSIGNMENT\\\\movie-on-tip\\\\src\\\\component\\\\MoviesCard.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { addMovieToFavourites, removeMovieFromFavourites, fetchFavouriteMovies } from \"../service/FetchData\";\nimport \"../styles/MoviesCard.css\";\nimport { ImHeart } from \"react-icons/im\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviesCard = _ref => {\n  _s();\n  let {\n    movie,\n    tabName,\n    fetchMovies\n  } = _ref;\n  const navigate = useNavigate();\n  const addToFav = async movie => {\n    let favorites = await fetchFavouriteMovies();\n    let movieAlreadyexists = favorites.some(favoriteMovie => favoriteMovie.title === movie.title);\n    if (movieAlreadyexists) {\n      toast.error(`Error! ${movie.title} is already added to favourites!`, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n      return;\n    }\n    const response = await addMovieToFavourites(movie);\n    if (response === 201) {\n      toast.success(`${movie.title} added to favourites!!`, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n    } else {\n      console.log(response);\n    }\n  };\n  const removeFromFav = async movie => {\n    const movieDetails = await fetchFavouriteMovies(movie.title);\n    const response = await removeMovieFromFavourites(movieDetails[0].id);\n    if (response === 200) {\n      toast.success(`${movie.title} removed from favourites!!`, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 2000\n      });\n      /*The function received as prop from parent component is  \n      being used to re-render the page.*/\n      fetchMovies();\n    }\n  };\n  const imageClick = async movie => {\n    let url = `/${movie.title}`;\n    navigate(url, {\n      state: {\n        tab: tabName,\n        id: movie.id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.posterurl,\n      alt: movie.title,\n      className: \"movie-card-image\",\n      onClick: () => imageClick(movie)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"movie-card-title\",\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), tabName === \"favourite\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Favourites\",\n          onClick: () => removeFromFav(movie),\n          children: \"Remove From Favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Favourites\",\n          onClick: () => addToFav(movie),\n          children: [\"Add To Favourites \", /*#__PURE__*/_jsxDEV(ImHeart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(MoviesCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = MoviesCard;\nexport default MoviesCard;\nvar _c;\n$RefreshReg$(_c, \"MoviesCard\");","map":{"version":3,"names":["useNavigate","toast","addMovieToFavourites","removeMovieFromFavourites","fetchFavouriteMovies","ImHeart","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesCard","_ref","_s","movie","tabName","fetchMovies","navigate","addToFav","favorites","movieAlreadyexists","some","favoriteMovie","title","error","position","POSITION","TOP_RIGHT","autoClose","response","success","console","log","removeFromFav","movieDetails","id","imageClick","url","state","tab","className","children","src","posterurl","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sri Koumudi/OneDrive/Desktop/G5A3-REACT-JS-GRADED-ASSIGNMENT/movie-on-tip/src/component/MoviesCard.tsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport {\n    addMovieToFavourites,\n    removeMovieFromFavourites,\n    fetchFavouriteMovies,\n} from \"../service/FetchData\"\nimport \"../styles/MoviesCard.css\"\nimport { ImHeart } from \"react-icons/im\"\nimport IMovieList from \"../model/IMovieList\"\n\ntype MovieCardProps = {\n    movie: IMovieList\n    tabName: string | undefined\n    fetchMovies(): void\n}\n\nconst MoviesCard = ({ movie, tabName, fetchMovies }: MovieCardProps) => {\n    const navigate = useNavigate()\n\n    const addToFav = async (movie: IMovieList) => {\n        let favorites = await fetchFavouriteMovies()\n\n        let movieAlreadyexists = favorites.some(\n            (favoriteMovie: IMovieList) => favoriteMovie.title === movie.title\n        )\n\n        if (movieAlreadyexists) {\n            toast.error(`Error! ${movie.title} is already added to favourites!`, {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 2000,\n            })\n            return\n        }\n\n        const response = await addMovieToFavourites(movie)\n\n        if (response === 201) {\n            toast.success(`${movie.title} added to favourites!!`, {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 2000,\n            })\n        } else {\n            console.log(response)\n        }\n    }\n\n    const removeFromFav = async (movie: IMovieList) => {\n        const movieDetails = await fetchFavouriteMovies(movie.title)\n        const response = await removeMovieFromFavourites(movieDetails[0].id)\n\n        if (response === 200) {\n            toast.success(`${movie.title} removed from favourites!!`, {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 2000,\n            })\n            /*The function received as prop from parent component is  \n            being used to re-render the page.*/\n            fetchMovies()\n        }\n    }\n\n    const imageClick = async (movie: IMovieList) => {\n        let url = `/${movie.title}`\n        navigate(url, { state: { tab: tabName, id: movie.id } })\n    }\n\n    return (\n        <div className=\"movie-card\" key={movie.id}>\n            <img\n                src={movie.posterurl}\n                alt={movie.title}\n                className=\"movie-card-image\"\n                onClick={() => imageClick(movie)}\n            />\n            <div className=\"movie-card-details\">\n                <h2 className=\"movie-card-title\">{movie.title}</h2>\n                {tabName === \"favourite\" ? (\n                    <>\n                        <button className=\"Favourites\" onClick={() => removeFromFav(movie)}>\n                            Remove From Favourites\n                        </button>\n                    </>\n                ) : (\n                    <>\n                        <button className=\"Favourites\" onClick={() => addToFav(movie)}>\n                            Add To Favourites <ImHeart />\n                        </button>\n                    </>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default MoviesCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}